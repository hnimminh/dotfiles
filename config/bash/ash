#!/bin/bash
############################################################
# Use Ansible Inventory as an ssh configuration file.
#
# Prerequisite:  jq & ansible
# Author: Minh Minh 
# Origin Author: Selivanov Pavel/Olivier Bilodeau
############################################################

debug=true

for program in ansible-config ansible-inventory jq; do
    type "$program" > /dev/null || { echo "ERROR: not found: $program"; exit 1; }
done

# Optional -i flag processing
if [ "$1" == "-i" ]; then
    shift
    inventory_arg="-i $1"
    shift
else
    inventory_arg=""
fi

if [ $# -eq 0 ]; then
    echo "Usage: $(basename $0) [-i INVENTORY] hostname <ssh arguments>"
    echo
    echo "Using -i before the hostname passes the -i INVENTORY argument to ansible-inventory to retrieve the host."
    echo
    echo "Avaliable hosts:"
    ansible-inventory $inventory_arg --list | jq '.[] | .hosts? | .[]? ' | sort | uniq
    exit 1
fi

ssh_args=$(ansible-config dump | grep '^ANSIBLE_SSH_ARGS' | cut -d'=' -f2-)
ssh_executable=$(ansible-config dump | grep '^ANSIBLE_SSH_EXECUTABLE' | cut -d'=' -f2-)
# Default value if ANSIBLE_SSH_EXECUTABLE is not set in some ansible installations
[ -z "$(echo $ssh_executable | tr -d ' ')" ] && ssh_executable=ssh
$debug && echo "ssh_args: $ssh_args"
$debug && echo "ssh_executable: $ssh_executable"

host="$1"
# All other arguments are ssh arguments
shift

inventory=$(ansible-inventory $inventory_arg --host "$host")
if [ $? -ne 0 ]; then
    echo "ERROR: ansible inventory failed to gather info on $host"
    exit 1
fi

# As of ansible 2.0, new style options like ansible_host override old style ansible_ssh_*
# Except ansible_ssh_common_args and ansible_ssh_extra_args
ansible_ssh_host=$(echo "$inventory" | jq ".ansible_ssh_host?" | grep -v '^null$' | tr -d \")
ansible_host=$(echo "$inventory" | jq ".ansible_host?" | grep -v '^null$' | tr -d \")
# Assign new value if variable is not set or empty
ansible_host="${ansible_host:-$ansible_ssh_host}"
$debug && echo "ansible_host: $ansible_host"

ansible_ssh_user=$(echo "$inventory" | jq ".ansible_ssh_user?" | grep -v '^null$' | tr -d \")
ansible_user=$(echo "$inventory" | jq ".ansible_user? " | grep -v '^null$' | tr -d \")
ansible_default_user=$(ansible-config dump | grep '^DEFAULT_REMOTE_USER' | cut -d'=' -f2-)
ansible_user="${ansible_user:-$ansible_ssh_user$ansible_default_user}"
$debug && echo "ansible_user: $ansible_user"

ansible_ssh_port=$(echo "$inventory" | jq ".ansible_ssh_port?" | grep -v '^null$' | tr -d \")
ansible_port=$(echo "$inventory" | jq ".ansible_port?" | grep -v '^null$' | tr -d \")
ansible_port="${ansible_port:-$ansible_ssh_port}"
$debug && echo "ansible_port: $ansible_port"

ansible_ssh_private_key_file=$(echo "$inventory" | jq ".ansible_ssh_private_key_file?" | grep -v '^null$' | tr -d \")
ansible_default_private_key_filer=$(ansible-config dump | grep '^DEFAULT_PRIVATE_KEY_FILE' | cut -d'=' -f2-)
ansible_ssh_private_key_file="${ansible_ssh_private_key_file:-$ansible_default_private_key_filer}"
$debug && echo "ansible_ssh_private_key_file: $ansible_ssh_private_key_file"

ansible_ssh_common_args=$(echo "$inventory" | jq ".ansible_ssh_common_args" | grep -v '^null$' | tr -d \")
$debug && echo "ansible_ssh_common_args: $ansible_ssh_common_args"

ansible_ssh_extra_args=$(echo "$inventory" | jq ".ansible_ssh_extra_args" | grep -v '^null$' | tr -d \")
$debug && echo "ansible_ssh_extra_args: $ansible_ssh_extra_args"

# We need to prepend hostname with username@
if [ -n "$ansible_user" ]; then ansible_user="${ansible_user}@"; fi

# If port is set, add it to ssh arguments
if [ -n "$ansible_port" ]; then ssh_args="$ssh_args -p $ansible_port"; fi

# If private key is set, add it to ssh arguments
if [ -n "$ansible_ssh_private_key_file" ]; then ssh_args="$ssh_args -i $ansible_ssh_private_key_file"; fi

$debug && echo result command: ${ssh_executable} ${ansible_user}${ansible_host} ${ssh_args} ${ansible_ssh_common_args} ${ansible_ssh_extra_args} $@
exec ${ssh_executable} ${ansible_user}${ansible_host} ${ssh_args} ${ansible_ssh_common_args} ${ansible_ssh_extra_args} $@


